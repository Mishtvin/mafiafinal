import { useState, useEffect } from 'react';
import { VideoCodec } from 'livekit-client';
import { fetchToken } from '../lib/livekit';
import { decodePassphrase, encodePassphrase, generateRoomId } from '../lib/utils';
import { VideoConferenceClient } from '../components/LiveVideo/VideoConferenceClient';

export default function VideoConferencePage() {
  const [token, setToken] = useState<string | null>(null);
  const [roomId] = useState('mafialive-room');
  const [username, setUsername] = useState('');
  const [hasJoined, setHasJoined] = useState(false);
  const [isE2EEEnabled, setIsE2EEEnabled] = useState(false);
  
  // LiveKit server URL –∏ –∫–æ–¥–µ–∫
  const serverUrl = 'wss://livekit.nyavkin.site';
  const codec: VideoCodec = 'vp8';

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Ö–µ—à –¥–ª—è E2EE passphrase
  useEffect(() => {
    if (typeof window !== 'undefined') {
      const hash = window.location.hash;
      if (hash && hash.length > 1) {
        try {
          decodePassphrase(hash.substring(1));
          setIsE2EEEnabled(true);
        } catch (err) {
          console.error('Failed to decode E2EE passphrase:', err);
        }
      }
    }
  }, []);

  // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è
  useEffect(() => {
    if (hasJoined && username) {
      fetchToken(username, roomId)
        .then(setToken)
        .catch(err => console.error('Error fetching token:', err));
    }
  }, [hasJoined, username, roomId]);

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ ID –ø—Ä–∏ –≤—Ö–æ–¥–µ
  const handleJoin = () => {
    // –ï—Å–ª–∏ –≤ window —É–∂–µ –µ—Å—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
    if (window.currentUserIdentity && window.currentUserIdentity !== 'undefined') {
      console.log('üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π ID –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', window.currentUserIdentity);
      setUsername(window.currentUserIdentity);
    } else {
      // –ï—Å–ª–∏ –Ω–µ—Ç, —Ç–æ —Å–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π ID –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ
      const tempId = 'User-' + Math.floor(Math.random() * 10000);
      console.log('üÜï –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π ID –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', tempId);
      setUsername(tempId);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —ç—Ç–æ—Ç ID –∫–∞–∫ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
      window.currentUserIdentity = tempId;
    }
    
    setHasJoined(true);
  };

  // –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ E2EE —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
  const toggleE2EE = () => {
    if (!isE2EEEnabled) {
      // –í–∫–ª—é—á–∞–µ–º E2EE –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º passphrase
      const passphrase = Math.random().toString(36).substring(2, 15) + 
                          Math.random().toString(36).substring(2, 15);
      
      // –î–æ–±–∞–≤–ª—è–µ–º passphrase –≤ —Ö–µ—à URL
      if (typeof window !== 'undefined') {
        window.location.hash = encodePassphrase(passphrase);
      }
      
      setIsE2EEEnabled(true);
    } else {
      // –û—Ç–∫–ª—é—á–∞–µ–º E2EE
      setIsE2EEEnabled(false);
      
      // –£–¥–∞–ª—è–µ–º —Ö–µ—à –∏–∑ URL
      if (typeof window !== 'undefined') {
        window.location.hash = '';
      }
    }
  };

  return (
    <div className="flex flex-col h-screen bg-slate-900 text-white">
      {!hasJoined ? (
        <div className="flex items-center justify-center h-screen">
          <div className="text-center p-8 max-w-md">
            <h1 className="text-3xl font-bold mb-6 bg-gradient-to-r from-blue-400 to-purple-500 bg-clip-text text-transparent">
              MafiaLive
            </h1>
            <p className="mb-8">
              –í–∏–¥–µ–æ–∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è —Å —Å–µ—Ç–∫–æ–π 4x3 (12 —Å–ª–æ—Ç–æ–≤)
            </p>
            
            <div className="flex flex-col space-y-4 mb-6">
              <div className="flex items-center">
                <input
                  id="e2ee"
                  type="checkbox"
                  checked={isE2EEEnabled}
                  onChange={toggleE2EE}
                  className="mr-2"
                />
                <label htmlFor="e2ee">–í–∫–ª—é—á–∏—Ç—å E2EE —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ</label>
              </div>
              
              {isE2EEEnabled && (
                <div className="bg-green-900/30 p-3 rounded text-left">
                  <p className="text-green-400 font-medium mb-2">–®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ</p>
                  <p className="text-sm">
                    –í—Å–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—ã –æ—Ç —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É
                  </p>
                </div>
              )}
            </div>
            
            <button 
              className="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors"
              onClick={handleJoin}
            >
              –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é
            </button>
          </div>
        </div>
      ) : token ? (
        <div className="h-screen">
          <VideoConferenceClient 
            liveKitUrl={serverUrl}
            token={token}
            codec={codec}
          />
        </div>
      ) : (
        <div className="flex items-center justify-center h-screen">
          <div className="text-center text-white">
            <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500 mx-auto mb-4"></div>
            <p>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –≤–∏–¥–µ–æ–∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏...</p>
            <p className="text-sm mt-2">–ö–æ–º–Ω–∞—Ç–∞: {roomId}</p>
            <p className="text-sm">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}</p>
            {isE2EEEnabled && <p className="text-sm text-green-400">E2EE —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ</p>}
          </div>
        </div>
      )}
    </div>
  );
}